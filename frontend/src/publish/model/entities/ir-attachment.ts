export default {
  appDEFields: [
    {
      codeName: 'file_id',
      logicName: 'oss文件标识',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 500,
      name: 'FILE_ID',
      id: 'file_id',
    },
    {
      codeName: 'res_id',
      logicName: '资源标识',
      predefinedType: 'PARENTID',
      stdDataType: 25,
      stringLength: 100,
      name: 'RES_ID',
      id: 'res_id',
    },
    {
      codeName: 'create_uid',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.CREATE_UID',
      },
      logicName: '建立人',
      predefinedType: 'CREATEMAN',
      stdDataType: 25,
      stringLength: 100,
      name: 'CREATE_UID',
      id: 'create_uid',
    },
    {
      codeName: 'write_date',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.WRITE_DATE',
      },
      logicName: '更新时间',
      predefinedType: 'UPDATEDATE',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'WRITE_DATE',
      id: 'write_date',
    },
    {
      codeName: 'write_uid',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.WRITE_UID',
      },
      logicName: '更新人',
      predefinedType: 'UPDATEMAN',
      stdDataType: 25,
      stringLength: 100,
      name: 'WRITE_UID',
      id: 'write_uid',
    },
    {
      codeName: 'id',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.ID',
      },
      logicName: '标识',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 100,
      name: 'ID',
      id: 'id',
    },
    {
      codeName: 'create_date',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.CREATE_DATE',
      },
      logicName: '建立时间',
      predefinedType: 'CREATEDATE',
      stdDataType: 5,
      valueFormat: 'YYYY-MM-DD HH:mm:ss',
      name: 'CREATE_DATE',
      id: 'create_date',
    },
    {
      codeName: 'name',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.NAME',
      },
      logicName: '名称',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 200,
      enableQuickSearch: true,
      name: 'NAME',
      id: 'name',
    },
    {
      codeName: 'file_size',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.FILE_SIZE',
      },
      logicName: '文件大小',
      predefinedType: 'NONE',
      stdDataType: 9,
      name: 'FILE_SIZE',
      id: 'file_size',
    },
    {
      codeName: 'is_public',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.PUBLIC',
      },
      logicName: '是公开文件',
      predefinedType: 'NONE',
      stdDataType: 9,
      name: 'PUBLIC',
      id: 'is_public',
    },
    {
      codeName: 'description',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.DESCRIPTION',
      },
      logicName: '描述',
      predefinedType: 'NONE',
      stdDataType: 21,
      stringLength: 1048576,
      name: 'DESCRIPTION',
      id: 'description',
    },
    {
      codeName: 'access_token',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.ACCESS_TOKEN',
      },
      logicName: '访问令牌',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 500,
      name: 'ACCESS_TOKEN',
      id: 'access_token',
    },
    {
      codeName: 'index_content',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.INDEX_CONTENT',
      },
      logicName: '索引内容',
      predefinedType: 'NONE',
      stdDataType: 21,
      stringLength: 1048576,
      name: 'INDEX_CONTENT',
      id: 'index_content',
    },
    {
      codeName: 'res_field',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.RES_FIELD',
      },
      logicName: '资源字段',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 500,
      name: 'RES_FIELD',
      id: 'res_field',
    },
    {
      codeName: 'store_fname',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.STORE_FNAME',
      },
      logicName: '存储的文件名',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 500,
      name: 'STORE_FNAME',
      id: 'store_fname',
    },
    {
      codeName: 'checksum',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.CHECKSUM',
      },
      logicName: '校验码/SHA1',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 500,
      name: 'CHECKSUM',
      id: 'checksum',
    },
    {
      codeName: 'res_model',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.RES_MODEL',
      },
      logicName: '资源模型',
      predefinedType: 'PARENTTYPE',
      stdDataType: 25,
      stringLength: 500,
      name: 'RES_MODEL',
      id: 'res_model',
    },
    {
      codeName: 'url',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.URL',
      },
      logicName: '网址',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 500,
      name: 'URL',
      id: 'url',
    },
    {
      codeName: 'mimetype',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.MIMETYPE',
      },
      logicName: 'Mime类型',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 500,
      name: 'MIMETYPE',
      id: 'mimetype',
    },
    {
      codeName: 'type',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.TYPE',
      },
      logicName: '类型',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 60,
      name: 'TYPE',
      id: 'type',
    },
    {
      codeName: 'company_id',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.COMPANY_ID',
      },
      logicName: '公司',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 100,
      name: 'COMPANY_ID',
      id: 'company_id',
    },
    {
      codeName: 'original_id',
      lnlanguageRes: {
        lanResTag: 'DEF.LNAME.IR_ATTACHMENT.ORIGINAL_ID',
      },
      logicName: '原始（未优化，未调整大小）附件',
      predefinedType: 'NONE',
      stdDataType: 25,
      stringLength: 100,
      name: 'ORIGINAL_ID',
      id: 'original_id',
    },
  ],
  appDEMethodDTOs: [
    {
      codeName: 'ir_attachment_dto',
      appDEMethodDTOFields: [
        {
          codeName: 'file_id',
          logicName: 'oss文件标识',
          appDEFieldId: 'file_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'file_id',
        },
        {
          codeName: 'res_id',
          logicName: '资源标识',
          appDEFieldId: 'res_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'res_id',
        },
        {
          codeName: 'access_token',
          logicName: '访问令牌',
          appDEFieldId: 'access_token',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'access_token',
        },
        {
          codeName: 'checksum',
          logicName: '校验码/SHA1',
          appDEFieldId: 'checksum',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'checksum',
        },
        {
          codeName: 'company_id',
          logicName: '公司',
          appDEFieldId: 'company_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'company_id',
        },
        {
          codeName: 'create_date',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '建立时间',
          appDEFieldId: 'create_date',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          id: 'create_date',
        },
        {
          codeName: 'create_uid',
          logicName: '建立人',
          appDEFieldId: 'create_uid',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          id: 'create_uid',
        },
        {
          codeName: 'description',
          logicName: '描述',
          appDEFieldId: 'description',
          sourceType: 'DEFIELD',
          stdDataType: 21,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'description',
        },
        {
          codeName: 'file_size',
          logicName: '文件大小',
          appDEFieldId: 'file_size',
          sourceType: 'DEFIELD',
          stdDataType: 9,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'file_size',
        },
        {
          codeName: 'id',
          logicName: '标识',
          appDEFieldId: 'id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          id: 'id',
        },
        {
          codeName: 'index_content',
          logicName: '索引内容',
          appDEFieldId: 'index_content',
          sourceType: 'DEFIELD',
          stdDataType: 21,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'index_content',
        },
        {
          codeName: 'is_public',
          logicName: '是公开文件',
          appDEFieldId: 'is_public',
          sourceType: 'DEFIELD',
          stdDataType: 9,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'is_public',
        },
        {
          codeName: 'mimetype',
          logicName: 'Mime类型',
          appDEFieldId: 'mimetype',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'mimetype',
        },
        {
          codeName: 'name',
          logicName: '名称',
          appDEFieldId: 'name',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'name',
        },
        {
          codeName: 'original_id',
          logicName: '原始（未优化，未调整大小）附件',
          appDEFieldId: 'original_id',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'original_id',
        },
        {
          codeName: 'res_field',
          logicName: '资源字段',
          appDEFieldId: 'res_field',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'res_field',
        },
        {
          codeName: 'res_model',
          logicName: '资源模型',
          appDEFieldId: 'res_model',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'res_model',
        },
        {
          codeName: 'store_fname',
          logicName: '存储的文件名',
          appDEFieldId: 'store_fname',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'store_fname',
        },
        {
          codeName: 'type',
          logicName: '类型',
          appDEFieldId: 'type',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          id: 'type',
        },
        {
          codeName: 'url',
          logicName: '网址',
          appDEFieldId: 'url',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'url',
        },
        {
          codeName: 'write_date',
          jsonFormat: 'yyyy-MM-dd HH:mm:ss',
          logicName: '更新时间',
          appDEFieldId: 'write_date',
          sourceType: 'DEFIELD',
          stdDataType: 5,
          type: 'SIMPLE',
          id: 'write_date',
        },
        {
          codeName: 'write_uid',
          logicName: '更新人',
          appDEFieldId: 'write_uid',
          sourceType: 'DEFIELD',
          stdDataType: 25,
          type: 'SIMPLE',
          id: 'write_uid',
        },
      ],
      sourceType: 'DE',
      type: 'DEFAULT',
      id: 'ir_attachment_dto',
    },
    {
      codeName: 'ir_attachment_filter_dto',
      appDEMethodDTOFields: [
        {
          codeName: 'n_company_id_eq',
          logicName: '公司',
          appDEFieldId: 'company_id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_company_id_eq',
        },
        {
          codeName: 'n_id_eq',
          logicName: '标识',
          appDEFieldId: 'id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_id_eq',
        },
        {
          codeName: 'n_name_like',
          logicName: '名称',
          appDEFieldId: 'name',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_name_like',
        },
        {
          codeName: 'n_original_id_eq',
          logicName: '原始（未优化，未调整大小）附件',
          appDEFieldId: 'original_id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_original_id_eq',
        },
        {
          codeName: 'n_res_id_eq',
          logicName: '资源标识',
          appDEFieldId: 'res_id',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_res_id_eq',
        },
        {
          codeName: 'n_res_model_eq',
          logicName: '资源模型',
          appDEFieldId: 'res_model',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_res_model_eq',
        },
        {
          codeName: 'n_type_eq',
          logicName: '类型',
          appDEFieldId: 'type',
          sourceType: 'DEFSEARCHMODE',
          stdDataType: 25,
          type: 'SIMPLE',
          allowEmpty: true,
          id: 'n_type_eq',
        },
      ],
      sourceType: 'DE',
      type: 'DEFILTER',
      id: 'ir_attachment_filter_dto',
    },
  ],
  appDEMethods: [
    {
      codeName: 'check_key',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        stdDataType: 9,
        type: 'SIMPLE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/check_key',
      actionMode: 'CHECKKEY',
      actionTag: 'CheckKey',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'CheckKey',
      id: 'check_key',
    },
    {
      codeName: 'create',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      noServiceCodeName: true,
      actionMode: 'CREATE',
      actionTag: 'Create',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Create',
      id: 'create',
    },
    {
      codeName: 'get',
      methodType: 'DEACTION',
      appDEMethodInput: {
        keyAppDEFieldId: 'id',
        type: 'KEYFIELD',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestField: 'ID',
      requestMethod: 'GET',
      requestParamType: 'FIELD',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'READ',
      actionTag: 'Get',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Get',
      id: 'get',
    },
    {
      codeName: 'get_draft',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'GET',
      requestParamType: 'NONE',
      requestPath: '/get_draft',
      actionMode: 'GETDRAFT',
      actionTag: 'GetDraft',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'GetDraft',
      id: 'get_draft',
    },
    {
      codeName: 'remove',
      methodType: 'DEACTION',
      appDEMethodInput: {
        keyAppDEFieldId: 'id',
        type: 'KEYFIELDS',
        id: '输入对象',
      },
      appDEMethodReturn: {
        type: 'VOID',
        id: '返回对象',
      },
      requestField: 'ID',
      requestMethod: 'DELETE',
      requestParamType: 'FIELD',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'DELETE',
      actionTag: 'Remove',
      actionType: 'REMOTE',
      batchActionMode: 1,
      enableBatchAction: true,
      dataSetType: 'REMOTE',
      name: 'Remove',
      id: 'remove',
    },
    {
      codeName: 'save',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/save',
      actionMode: 'SAVE',
      actionTag: 'Save',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Save',
      id: 'save',
    },
    {
      codeName: 'update',
      methodType: 'DEACTION',
      appDEMethodInput: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'DTO',
        output: true,
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'DTO',
        id: '返回对象',
      },
      requestMethod: 'PUT',
      requestParamType: 'ENTITY',
      needResourceKey: true,
      noServiceCodeName: true,
      actionMode: 'UPDATE',
      actionTag: 'Update',
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'Update',
      id: 'update',
    },
    {
      codeName: 'fetch_common',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'ir_attachment_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_common',
      actionType: 'REMOTE',
      dataSetName: 'common',
      dataSetTag: 'common',
      dataSetType: 'REMOTE',
      id: 'fetch_common',
    },
    {
      codeName: 'fetch_common_by_model',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'ir_attachment_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_common_by_model',
      actionType: 'REMOTE',
      addedqconditions: [
        {
          condOp: 'EQ',
          condValue: 'srfmodelname',
          fieldName: 'RES_MODEL',
          vartypeId: 'DATACONTEXT',
          condType: 'SINGLE',
          name: '(RES_MODEL) 等于(=) 数据上下文 srfmodelname',
          id: '(res_model) 等于(=) 数据上下文 srfmodelname',
        },
      ],
      dataSetName: 'common_by_model',
      dataSetTag: 'common_by_model',
      dataSetType: 'REMOTE',
      id: 'fetch_common_by_model',
    },
    {
      codeName: 'fetch_default',
      methodType: 'FETCH',
      appDEMethodInput: {
        appDEMethodDTOId: 'ir_attachment_filter_dto',
        type: 'DTO',
        id: '输入对象',
      },
      appDEMethodReturn: {
        appDEMethodDTOId: 'ir_attachment_dto',
        type: 'PAGE',
        id: '返回对象',
      },
      requestMethod: 'POST',
      requestParamType: 'ENTITY',
      requestPath: '/fetch_default',
      actionType: 'REMOTE',
      dataSetName: 'DEFAULT',
      dataSetTag: 'Default',
      dataSetType: 'REMOTE',
      id: 'fetch_default',
    },
    {
      codeName: 'FilterCreate',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERCREATE',
      id: 'filtercreate',
    },
    {
      codeName: 'FilterFetch',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERFETCH',
      id: 'filterfetch',
    },
    {
      codeName: 'FilterGet',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERGET',
      id: 'filterget',
    },
    {
      codeName: 'FilterGetDraft',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERGETDRAFT',
      id: 'filtergetdraft',
    },
    {
      codeName: 'FilterRemove',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERREMOVE',
      id: 'filterremove',
    },
    {
      codeName: 'FilterSearch',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERSEARCH',
      id: 'filtersearch',
    },
    {
      codeName: 'FilterUpdate',
      methodType: 'FILTERACTION',
      builtinMethod: true,
      actionType: 'REMOTE',
      dataSetType: 'REMOTE',
      name: 'FILTERUPDATE',
      id: 'filterupdate',
    },
  ],
  appDEUIActions: [
    {
      actionLevel: 100,
      actionTarget: 'NONE',
      buttonStyle: 'DEFAULT',
      caption: '添加附件',
      codeName: 'add_attachments',
      frontProcessType: 'OTHER',
      fullCodeName: 'ir_attachment_add_attachments',
      navigateContexts: [
        {
          key: 'SRFSESSIONID',
          rawValue: true,
          name: 'SRFSESSIONID',
          id: 'srfsessionid',
        },
      ],
      sysImage: {
        cssClass: 'fa fa-plus',
        glyph: 'xf067@FontAwesome',
      },
      uiactionMode: 'FRONT',
      uiactionTag: 'add_attachments',
      uiactionType: 'DEUIACTION',
      uilogicAttachMode: 'REPLACE',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDEUILogicId: 'add_attachment',
      appDataEntityId: 'ibizodooapp.ir_attachment',
      name: '添加附件',
      id: 'add_attachments@ir_attachment',
    },
    {
      actionLevel: 100,
      actionTarget: 'SINGLEDATA',
      buttonStyle: 'DEFAULT',
      caption: '下载',
      codeName: 'download',
      frontProcessType: 'OTHER',
      fullCodeName: 'ir_attachment_download',
      navigateParams: [
        {
          key: 'fileid',
          value: 'file_id',
          id: 'fileid',
        },
        {
          key: 'filename',
          value: 'name',
          id: 'filename',
        },
      ],
      sysImage: {
        cssClass: 'fa fa-download',
        glyph: 'xf019@FontAwesome',
      },
      scriptCode:
        "const file = data[0];\r\nconst otherParams = {};\r\n// 如果有folder则以业务数据中folder作为目录 \r\nif (file && file.folder) otherParams.osscat = file.folder;\r\n// 计算下载地址\r\nconst { downloadUrl } = ibiz.util.file.calcFileUpDownUrl(context, params, file, otherParams);\r\nconst url = downloadUrl.replace('%fileId%', file.file_id);\r\n// 构建下载凭证参数（实体标识和主键标识）\r\nconst downloadTicketParams = {\r\n\tappEntityTag: params.srfmodelname ? `ibizodooapp.${params.srfmodelname}` : null,\r\n}\r\n// 下载文件\r\nibiz.util.file.fileDownload(url, file.name, {\r\n  context,\r\n  params,\r\n  data: file,\r\n  file: { fileId: file.file_id, ...file },\r\n  extraParams: {},\r\n  downloadTicketParams,\r\n});",
      tooltip: '下载当前附件',
      uiactionMode: 'FRONT',
      uiactionTag: 'download',
      uiactionType: 'DEUIACTION',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'ibizodooapp.ir_attachment',
      name: '附件下载',
      id: 'download@ir_attachment',
    },
    {
      actionLevel: 100,
      actionTarget: 'NONE',
      buttonStyle: 'DEFAULT',
      caption: '上传',
      codeName: 'upload_attachment',
      frontProcessType: 'OTHER',
      fullCodeName: 'ir_attachment_upload_attachment',
      scriptCode:
        'const result = await ibiz.util.file.chooseFileAndUpload(context, params, data, { multiple: true });\nif (result) {\n    const items = result.map(item => {\n        return {\n            uuid: item.id,\n            ...item,\n        };\n    });\n    Object.assign(data, items);\n}\nreturn { data: result };',
      uiactionMode: 'FRONT',
      uiactionTag: 'upload_attachment',
      uiactionType: 'DEUIACTION',
      showBusyIndicator: true,
      noPrivDisplayMode: 2,
      appDataEntityId: 'ibizodooapp.ir_attachment',
      name: '上传附件',
      id: 'upload_attachment@ir_attachment',
    },
  ],
  appDEUILogics: [
    {
      codeName: 'add_attachment',
      defaultParamName: 'Default',
      logicName: '添加附件数据',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 190,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'deuiaction1',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 208,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          code: "ibiz.mc.command.create.send({ srfdecodename: 'ir_attachment'});",
          codeName: 'RAWJSCODE_01',
          leftPos: 989,
          logicNodeType: 'RAWJSCODE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'end1',
              srcDEUILogicNodeId: 'rawjscode_01',
              id: '连接名称',
            },
          ],
          topPos: 208,
          parallelOutput: true,
          name: '刷新附件列表',
          id: 'rawjscode_01',
        },
        {
          code: "// 创建新上下文对象并拷贝原始context内容\r\nconst newcontext = { ...context };\r\nnewcontext.srfsessionid=\"attachment_session\";\r\n// 获取ir_attachment实体服务\r\nconst _app = ibiz.hub.getApp(context.srfappid);\r\nconst appName = context.srfappid.split('__').pop(); // 取最后一段\r\n// 调用实体服务新建行为\r\nif (uiLogic.attach) {\r\n  await _app.deService.exec( appName+'.ir_attachment', 'create', newcontext, uiLogic.attach ); \r\n};\r\n",
          codeName: 'RAWJSCODE_02',
          leftPos: 780,
          logicNodeType: 'RAWJSCODE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode_01',
              srcDEUILogicNodeId: 'rawjscode_02',
              id: '连接名称',
            },
          ],
          topPos: 208,
          parallelOutput: true,
          name: '新建附件',
          id: 'rawjscode_02',
        },
        {
          dstAppDEUIActionId: 'upload_attachment@ir_attachment',
          dstAppDataEntityId: 'ibizodooapp.ir_attachment',
          codeName: 'DEUIACTION1',
          dstDEUILogicParamId: 'files',
          leftPos: 339,
          logicNodeType: 'DEUIACTION',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode4',
              srcDEUILogicNodeId: 'deuiaction1',
              id: '连接名称',
            },
          ],
          topPos: 206,
          name: '上传附件',
          id: 'deuiaction1',
        },
        {
          code: '// 计算新建默认值\nconst _viewparam = uiLogic.view.params;\nconsole.log("");\nconst mimeTypeMap = {\n  ".txt": "text/plain",\n  ".html": "text/html",\n  ".htm": "text/html",\n  ".css": "text/css",\n  ".js": "application/javascript",\n  ".json": "application/json",\n  ".xml": "application/xml",\n  ".csv": "text/csv",\n  ".jpg": "image/jpeg",\n  ".jpeg": "image/jpeg",\n  ".png": "image/png",\n  ".gif": "image/gif",\n  ".bmp": "image/bmp",\n  ".svg": "image/svg+xml",\n  ".webp": "image/webp",\n  ".ico": "image/x-icon",\n  ".mp4": "video/mp4",\n  ".webm": "video/webm",\n  ".ogg": "video/ogg",\n  ".mp3": "audio/mpeg",\n  ".wav": "audio/wav",\n  ".flac": "audio/flac",\n  ".aac": "audio/aac",\n  ".pdf": "application/pdf",\n  ".doc": "application/msword",\n  ".docx": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",\n  ".xls": "application/vnd.ms-excel",\n  ".xlsx": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",\n  ".ppt": "application/vnd.ms-powerpoint",\n  ".pptx": "application/vnd.openxmlformats-officedocument.presentationml.presentation",\n  ".zip": "application/zip",\n  ".rar": "application/x-rar-compressed",\n  ".7z": "application/x-7z-compressed",\n  ".tar": "application/x-tar",\n  ".gz": "application/gzip",\n  ".exe": "application/octet-stream",\n  ".woff": "font/woff",\n  ".woff2": "font/woff2",\n  ".ttf": "font/ttf",\n  ".otf": "font/opentype"\n};\nuiLogic.attach = uiLogic.files.map(item => \n    {\n        const defaultMimeType = "application/octet-stream";\n        var _mimeType = defaultMimeType;\n        const match = item.filename.match(/\\.([^.]+)$/);\n        if (match){\n            const ext = match[0].toLowerCase();\n            _mimeType = mimeTypeMap[ext] || defaultMimeType;\n        }\n    \n        return {\n            name: item.name,\n            file_id: item.id,\n            id: item.uuid,\n            res_id: _viewparam.mail_thread,\n            res_model: _viewparam.srfmodelname,\n            type: "binary",\n            store_fname: item.filename,\n            file_size: item.filesize,\n            mimeType: _mimeType,\n        }\n    }\n)\n',
          codeName: 'RAWJSCODE4',
          leftPos: 560,
          logicNodeType: 'RAWJSCODE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode_02',
              srcDEUILogicNodeId: 'rawjscode4',
              id: '连接名称',
            },
          ],
          topPos: 208,
          name: '设置附件参数',
          id: 'rawjscode4',
        },
        {
          dstAppDEActionId: 'create',
          dstAppDataEntityId: 'ibizodooapp.ir_attachment',
          codeName: 'DEACTION_01',
          dstDEUILogicParamId: 'attach',
          leftPos: 780,
          logicNodeType: 'DEACTION',
          topPos: 110,
          parallelOutput: true,
          name: '新建附件',
          id: 'deaction_01',
        },
        {
          codeName: 'END1',
          leftPos: 1187,
          logicNodeType: 'END',
          topPos: 210,
          parallelOutput: true,
          name: '结束',
          id: 'end1',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'view',
          activeViewParam: true,
          name: '当前视图对象',
          id: 'view',
        },
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
        {
          codeName: 'files',
          entityListParam: true,
          name: '上传文件',
          id: 'files',
        },
        {
          codeName: 'attach',
          entityListParam: true,
          name: '附件',
          id: 'attach',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '添加附件数据',
      id: 'add_attachment',
    },
    {
      codeName: 'delete_attachment',
      defaultParamName: 'Default',
      logicName: '删除附件数据',
      deuilogicNodes: [
        {
          codeName: 'Begin',
          leftPos: 70,
          logicNodeType: 'BEGIN',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'msgbox_01',
              srcDEUILogicNodeId: 'begin',
              id: '连接名称',
            },
          ],
          topPos: 210,
          parallelOutput: true,
          name: '开始',
          id: 'begin',
        },
        {
          buttonsType: 'OKCANCEL',
          message: '是否确认删除数据？',
          msgBoxType: 'WARNING',
          title: '数据删除',
          codeName: 'MSGBOX_01',
          leftPos: 180,
          logicNodeType: 'MSGBOX',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode_02',
              deuilogicLinkGroupCond: {
                groupOP: 'AND',
                deuilogicLinkConds: [
                  {
                    condOP: 'EQ',
                    dstLogicParamId: 'last',
                    paramValue: 'ok',
                    value: 'ok',
                    logicType: 'SINGLE',
                    id: 'last 等于(=) ok',
                  },
                ],
                logicType: 'GROUP',
              },
              srcDEUILogicNodeId: 'msgbox_01',
              id: '连接名称',
            },
          ],
          topPos: 206,
          parallelOutput: true,
          name: '消息弹窗',
          id: 'msgbox_01',
        },
        {
          code: "// 创建新上下文对象并拷贝原始context内容\nconst newcontext = { ir_attachment: uiLogic.default.id ,...context };\nnewcontext.srfsessionid=\"attachment_session\";\n// 获取ir_attachment实体服务\nconst _app = ibiz.hub.getApp(context.srfappid);\nconst appName = context.srfappid.split('__').pop(); // 取最后一段\n// 调用实体服务删除行为\nif (uiLogic.attach) {\n  await _app.deService.exec( appName+'.ir_attachment', 'remove', newcontext, uiLogic.default ); \n};\n",
          codeName: 'RAWJSCODE_02',
          leftPos: 390,
          logicNodeType: 'RAWJSCODE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'rawjscode_01',
              srcDEUILogicNodeId: 'rawjscode_02',
              id: '连接名称',
            },
          ],
          topPos: 206,
          parallelOutput: true,
          name: '删除附件',
          id: 'rawjscode_02',
        },
        {
          codeName: 'END1',
          leftPos: 857,
          logicNodeType: 'END',
          topPos: 208,
          parallelOutput: true,
          name: '结束',
          id: 'end1',
        },
        {
          code: "ibiz.mc.command.remove.send({ srfdecodename: 'ir_attachment',srfkey: uiLogic.default.id});",
          codeName: 'RAWJSCODE_01',
          leftPos: 649,
          logicNodeType: 'RAWJSCODE',
          deuilogicLinks: [
            {
              dstDEUILogicNodeId: 'end1',
              srcDEUILogicNodeId: 'rawjscode_01',
              id: '连接名称',
            },
          ],
          topPos: 208,
          parallelOutput: true,
          name: '刷新附件列表',
          id: 'rawjscode_01',
        },
      ],
      deuilogicParams: [
        {
          codeName: 'files',
          entityListParam: true,
          name: '上传文件',
          id: 'files',
        },
        {
          codeName: 'view',
          activeViewParam: true,
          name: '当前视图对象',
          id: 'view',
        },
        {
          codeName: 'Default',
          default: true,
          entityParam: true,
          name: '传入变量',
          id: 'default',
        },
        {
          codeName: 'last',
          lastReturnParam: true,
          id: 'last',
        },
        {
          codeName: 'attach',
          entityListParam: true,
          name: '附件',
          id: 'attach',
        },
      ],
      startDEUILogicNodeId: 'begin',
      name: '删除附件数据',
      id: 'delete_attachment',
    },
  ],
  deopprivs: [
    {
      logicName: '建立',
      name: 'CREATE',
      id: 'create',
    },
    {
      logicName: '删除',
      name: 'DELETE',
      id: 'delete',
    },
    {
      logicName: '读取',
      name: 'READ',
      id: 'read',
    },
    {
      logicName: '更新',
      name: 'UPDATE',
      id: 'update',
    },
  ],
  codeName: 'ir_attachment',
  deapicodeName: 'ir_attachment',
  deapicodeName2: 'ir_attachments',
  deapitag: 'IR_ATTACHMENT',
  dataAccCtrlArch: 1,
  dataAccCtrlMode: 1,
  enableUIActions: 15,
  keyAppDEFieldId: 'id',
  lnlanguageRes: {
    lanResTag: 'DE.LNAME.IR_ATTACHMENT',
  },
  logicName: '附件',
  majorAppDEFieldId: 'name',
  minorAppDERSs: [
    {
      actionRSMode: 1,
      codeName: 'attachments',
      majorAppDataEntityId: 'ibizodooapp.mail_thread',
      parentAppDEFieldId: 'res_id',
      rsmode: 2,
      name: '邮件会话-附件',
      id: 'attachments',
    },
  ],
  quickSearchAppDEFieldIds: ['name'],
  sysAPITag: 'ServiceAPI',
  defaultMode: true,
  enableFilterActions: true,
  major: true,
  name: 'IR_ATTACHMENT',
  id: 'ibizodooapp.ir_attachment',
  codeName2: 'ir_attachments',
  requestPaths: ['mail_threads/${mail_thread}/ir_attachments/${ir_attachment}'],
};
